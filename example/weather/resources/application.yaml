database:
  type: "postgres"
  host: "postgres"
  port: 5432
  database: "main" # 実際のDB名に合わせる
  user: "weather" # 実際のユーザー名に合わせる
  password: "weather" # 実際のパスワードに合わせる (タイプミスに注意)
  sslmode: "disable"
  # ★ 追加: アプリケーション固有のマイグレーションパス
  # 例: weather アプリケーションのマイグレーションファイルが 'example/weather/resources/migrations' にある場合
  app_migration_path: "example/weather/resources/migrations"
  # ★ 追加: 接続プール設定
  max_open_conns: 10
  max_idle_conns: 5
  conn_max_lifetime_minutes: 5

batch:
  polling_interval_seconds: 3600
  api_endpoint: "https://api.open-meteo.com/v1/forecast"
  api_key: "your_api_key"
  job_name: "weather"
  retry: # ステップレベルのリトライ設定 (チャンク処理全体のリトライ)
    max_attempts: 3
    initial_interval: 1
    max_interval: 10
    factor: 2
    circuit_breaker_threshold: 3
    circuit_breaker_reset_interval: 60
  item_retry: # アイテムレベルのリトライ設定
    max_attempts: 3
    retryable_exceptions: ["io.EOF", "net.OpError"] # リトライ可能な例外のフルパス文字列 (例: "io.EOF", "net.OpError")
  item_skip: # アイテムレベルのスキップ設定
    skip_limit: 5 # スキップ可能なアイテムの最大数
    skippable_exceptions: ["json.UnmarshalTypeError"] # スキップ可能な例外のフルパス文字列
  chunk_size: 50 # ★ 追加

system:
  timezone: "Asia/Tokyo"
  logging:
    level: "DEBUG"
